% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/discourse_connector.R, R/discourse_connector_logical.R
\name{discourse_connector}
\alias{discourse_connector}
\alias{discourse_connector_logical}
\title{Extract Discourse Connectors in Context}
\usage{
discourse_connector(text.var, grouping.var, n.before = 1, tot = FALSE,
  n.after = n.before, ord.inds = TRUE, markup = c("<<", ">>"),
  name = NULL, ...)

discourse_connector_logical(text.var, grouping.var, n.before = 1,
  tot = FALSE, n.after = n.before, ord.inds = TRUE, markup = c("<<",
  ">>"), name = NULL, ...)
}
\arguments{
\item{text.var}{The text variable.}

\item{grouping.var}{The grouping variables.  Also takes a single
grouping variable or a list of 1 or more grouping variables.}

\item{n.before}{The number of rows before the indexed occurrence.}

\item{tot}{logical.  If \code{TRUE} condenses sub-units (e.g., sentences)
into turns of talk for that \code{grouping.var}.}

\item{n.after}{The number of rows after the indexed occurrence.}

\item{ord.inds}{logical.  If \code{TRUE} inds is ordered least to greatest.}

\item{markup}{A character vector of length two indicating the left (element
1) and right (element 2) boundary markers to use to highlight the
discourse connectors.  Use \code{c("", "")} to not mark the discourse
connectors.}

\item{name}{A string indicating the name to search for within the internal
data sets, typically the function's name.  Generally, for internal use.}

\item{\ldots}{Other arguments passed to \code{\link[qdap]{termco}}.}
}
\value{
Returns returns a list of 2-3:
\item{counts}{A \code{\link[qdap]{termco}} object of discourse connector counts.}
\item{Context 1}{A \code{\link[qdap]{trans_context}} object of the discourse connectors in context.  Note the name of this object is supplied by \code{names} element one.}
\item{Context 2...n}{An optional (not returned if \code{regex} is of length one) \code{\link[qdap]{trans_context}} object of the discourse connectors in context.  Note the name of this (these) object(s) is supplied by \code{names} element 2...n.}
}
\description{
Extract discourse connectors in context.  This is the flexible default template
for modular use in specific discourse connector functions.
}
\section{Arguments2}{
 \code{discourse_connector} & \code{discourse_connector_logical}
require 3 arguments (passed to ellipsis or internally through the \code{name}
argument) that are responsible for checking for terms and naming them
in output.  Typically \code{regex} and \code{terms} are searching for the
same thing but expressed as a regular expression of a simplified
\code{\link[qdap]{termco}} approach to terms searching.  Generally, these
arguments are used internally but are documented here:
\itemize{
\item \code{regex} - A list of strings of or single string regular expression(s) used to search for expressions in the transcript excerpts and mark them up.
\item \code{terms} - A list of terms to search for in \code{\link[qdap]{termco}} and \code{\link[qdap]{dispersion plot}}.
\item \code{names} - A vector of names that corresponds to the number of regular expressions searched for.
}
}

\section{Functions}{
 \code{discourse_connector_logical} can take 4 different
functions (as arguments passed to ellipsis) that perform logical checks or
alter text variables before transcript sectioning & graphics are generated
from the text.  Typically, these functions are used internally but are
documented here:
\itemize{
\item \code{fun1} - A function that checks the text variable and returns a logical vector.  This allows for additional restrictions to be placed upon the text beyond the limited (non-regex) capabilities of \code{\link[qdap]{termco}} and \code{\link[qdap]{trans_context}}.
\item \code{fun2} - A function that checks the grouping variable and returns a logical vector.  This allows for additional restrictions to be placed upon the grouping variables that can't be addressed by \code{\link[qdap]{termco}} and \code{\link[qdap]{trans_context}}.
\item \code{fun3} - A function that alters the text variable for the creation of transcripts sections (see \code{\link[qdap]{trans_context}}) & graphic visualizations of the data (including the generic pot method).
\item \code{fun4} - A function that alters the text variable for the creation of graphic visualizations of the data only (including the generic pot method).
}
}
\examples{
## Marker with one type (just: "I")
out1 <- with(pres_debates2012[1:200, ], discourse_connector(dialogue, person,
    names = c("I"),
    regex = "\\\\bI('[a-z]+)*\\\\b",
    terms = list(I = c(" I ", " I'"))
))

out1[[1]]
out1[[2]]
plot(out1)

## Marker with two types (both: "I" & "you")
out2 <- with(pres_debates2012[1:200, ], discourse_connector(dialogue, person,
    names = c("I", "you"),
    regex =  list(
        I = "I('[a-z]+)*\\\\b",
        you = "(\\\\b[Yy]ou('[a-z]+)*\\\\b)"
    ),
    terms = list(
        I = c(" I ", " I'"),
        you = c(" you ", " you'")
    )
))
out2[[1]]
out2[[2]]
out2[[3]]

## Save externally use .doc or .txt
## print(out2[[2]], file="you_I.doc")

## Key Words in Context
## Determine top 15 words
topterms <- qdap::freq_terms(
    qdap::pres_debates2012[["dialogue"]],
    top = 20,
    at.least = 5,
    stopwords = c(qdapDictionaries::contractions[[1]], qdapDictionaries::Top200Words)
)

## Marker with top 15 words
out3 <- with(pres_debates2012, discourse_connector(dialogue, person,
    names = c("top15"),
    regex =  list(
        top15 = qdapRegex::pastex(qdapRegex::group(qdapRegex::bind(topterms[[1]])))
    ),
    terms = list(
        top15 = qdap::spaste(topterms[[1]])
    )
))
out3[[1]]
out3[[2]]
plot(out3)
}
\references{
Kalajahi, S. A. R., Abdullah, A. N., Mukundan, J., & Tannacito, D. J. (2012) \href{http://goo.gl/eS0OwV}{Discourse connectors: An overview of the history, definition and classification of the term}. \emph{World Applied Sciences Journal, 19}(11), 1659-1673.
}
\seealso{
\code{\link[qdap]{termco}},
\code{\link[qdap]{trans_context}}
}
\keyword{connector}
\keyword{discourse}

